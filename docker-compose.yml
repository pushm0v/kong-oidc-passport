version: "3.7"
services:
  passport:
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        APP_NAME: passport
    image: oidc-passport
    container_name: oidc-passport
    restart: unless-stopped
    working_dir: /var/www/passport
    volumes:
      - ./bwi-passport/:/var/www/passport
    networks:
      - bwi

  dashboard:
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        APP_NAME: dashboard
    image: bwi-dashboard
    container_name: bwi-dashboard
    restart: unless-stopped
    working_dir: /var/www/dashboard
    volumes:
      - ./bwi-dashboard/:/var/www/dashboard
    networks:
      - bwi
  db:
    image: postgres:15-alpine
    container_name: bwi-db
    restart: unless-stopped
    environment:
      POSTGRES_DATABASE: ${DB_DATABASE}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    networks:
      - bwi
    ports:
      - 5432:5432

  nginx:
    image: nginx:stable-alpine
    container_name: bwi-nginx
    restart: unless-stopped
    ports:
      - 8080:80
      - 8081:81
    volumes:
      - ./bwi-passport:/var/www/passport
      - ./bwi-dashboard:/var/www/dashboard
      - ./docker/nginx/web:/etc/nginx/conf.d:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - bwi

  kong-migrate:
    build:
      context: ./
      dockerfile: kong-Dockerfile
    image: kong-bwi
    container_name: kong-migrate
    restart: on-failure
    command: kong migrations bootstrap
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db-kong
      - KONG_PG_DATABASE=kong_db
      - KONG_PG_USER=postgres
      - KONG_PG_PASSWORD=postgres
    depends_on:
      - db-kong
    networks:
      - bwi
  konga-migrate:
    image: pantsel/konga
    command: "-c prepare -a postgres -u postgresql://postgres:postgres@db-kong:5432/konga_db"
    networks:
      - bwi
    restart: on-failure
    links:
      - db-kong
    depends_on:
      - db-kong

  kong:
    build:
      context: ./
      dockerfile: kong-Dockerfile
    image: kong-bwi
    container_name: kong-bwi
    depends_on:
      - kong-migrate
    networks:
      - bwi
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)
    environment:
      KONG_LOG_LEVEL: debug
      KONG_DATABASE: postgres
      KONG_PG_HOST: db-kong
      KONG_PG_PORT: 5432
      KONG_PG_DATABASE: kong_db
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: postgres
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl

  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    environment:
      - DB_ADAPTER=postgres
      - DB_HOST=db-kong
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - TOKEN_SECRET=km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      - DB_DATABASE=konga_db
      - NODE_ENV=production
    depends_on:
      - kong
      - konga-migrate
    networks:
    - bwi

  db-kong:
    image: postgres:10-alpine
    container_name: bwi-db-kong
    restart: unless-stopped
    environment:
      POSTGRES_DATABASE: ${DB_DATABASE}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
    volumes:
      - ./docker/postgres-kong:/var/lib/postgresql/data
    networks:
      - bwi
    ports:
      - 5433:5432

networks:
  bwi:
    driver: bridge